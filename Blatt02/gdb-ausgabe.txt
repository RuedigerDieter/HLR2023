> gdb ./simple

>> b 9
>> run

>> print buf 
$1 = {0, 0, 0, 0, 23, 113}
>> print buf[2]
$2 = 0

>> n
10        int buf[] = {1, 1, 2, 3, 4, 5};
>> print buf
$3 = {0, 0, 0, 0, 23, 113}
>> print buf[2]
$4 = 0
// buf ist ein Array. mistake1 returnt einen Pointer darauf.

>> c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
mistake3 () at simple.c:24
24        buf[0] = 3;
>> list
19
20      int *mistake3(void) {
21        /* In dieser Funktion darf kein Speicher direkt allokiert werden. */
22        int mistake2_ = 0;
23        int *buf = (int *)&mistake2;
24        buf[0] = 3;
25        return buf;
26      }
27
28      int *mistake4(void) {
>> bt
#0  mistake3 () at simple.c:24
#1  0x000055555555525b in main () at simple.c:37
>> up 1
#1  0x000055555555525b in main () at simple.c:37
37        int *p[4] = {&mistake1()[1], &mistake2()[1], mistake3(), mistake4()};
>> print p
$5 = {0x4, 0x5555555592a4, 0x0, 0x0}
>> print *mistake4
$6 = {int *(void)} 0x5555555551f7 <mistake4>
